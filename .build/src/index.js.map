{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["import { Telegraf, Scenes, session } from 'telegraf';\nimport { message } from 'telegraf/filters';\nimport {\n  tldr,\n  ama,\n  writeCode,\n  explainCode,\n  brainstorm,\n  chat,\n  image,\n  convo\n} from './handler';\nimport { telegramToken, ownerTelegramId } from './config';\n\nconst createBot = (telegramToken: string | undefined): Telegraf => {\n  if (telegramToken === undefined) {\n    console.error('missing telegram bot token');\n    process.exit();\n  }\n\n  return new Telegraf(telegramToken);\n};\n\nconst bot = createBot(telegramToken);\n\nconst main = async (): Promise<void> => {\n  const stage = new Scenes.Stage([\n    tldr,\n    ama,\n    writeCode,\n    explainCode,\n    brainstorm,\n    image,\n    convo\n  ]);\n\n  bot.use(async (ctx, next) => {\n    if (ctx.from?.id !== ownerTelegramId) {\n      await ctx.reply(\"You're not my boss, I can't answer your question!\");\n      return;\n    }\n\n    await next();\n  });\n\n  bot.use(session());\n\n  bot.use(stage.middleware());\n\n  bot.command('tldr', (ctx) => ctx.scene.enter('tldr'));\n\n  bot.command('ama', (ctx) => ctx.scene.enter('ama'));\n\n  bot.command('code', (ctx) => ctx.scene.enter('writecode'));\n\n  bot.command('explaincode', (ctx) => ctx.scene.enter('explaincode'));\n\n  bot.command('brainstorm', (ctx) => ctx.scene.enter('brainstorm'));\n\n  bot.command('image', (ctx) => ctx.scene.enter('image'));\n\n  bot.command('startconvo', (ctx) => ctx.scene.enter('convo'));\n\n  bot.command('whoami', async (ctx) => {\n    await ctx.reply(\n      \"I am a telegram bot that is used by @irfansppp to become his personal assistant. I'm powered by OpenAI.\"\n    );\n  });\n\n  bot.on(message('sticker'), async (ctx) => await ctx.reply('\uD83D\uDC4D'));\n\n  bot.on(message('text'), async (ctx) => {\n    await chat(ctx);\n  });\n\n  await bot.launch();\n};\n\nmain()\n  .then()\n  .catch((err) => {\n    console.error(err);\n  });\n\nprocess.once('SIGINT', () => {\n  bot.stop('SIGINT');\n});\n\nprocess.once('SIGTERM', () => {\n  bot.stop('SIGTERM');\n});\n"],
  "mappings": ";AAAA,sBAA0C;AAC1C,qBAAwB;AACxB,qBASO;AACP,oBAA+C;AAE/C,MAAM,YAAY,CAACA,mBAAgD;AACjE,MAAIA,mBAAkB,QAAW;AAC/B,YAAQ,MAAM,4BAA4B;AAC1C,YAAQ,KAAK;AAAA,EACf;AAEA,SAAO,IAAI,yBAASA,cAAa;AACnC;AAEA,MAAM,MAAM,UAAU,2BAAa;AAEnC,MAAM,OAAO,YAA2B;AACtC,QAAM,QAAQ,IAAI,uBAAO,MAAM;AAAA,IAC7B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,MAAI,IAAI,OAAO,KAAK,SAAS;AApC/B;AAqCI,UAAI,SAAI,SAAJ,mBAAU,QAAO,+BAAiB;AACpC,YAAM,IAAI,MAAM,mDAAmD;AACnE;AAAA,IACF;AAEA,UAAM,KAAK;AAAA,EACb,CAAC;AAED,MAAI,QAAI,yBAAQ,CAAC;AAEjB,MAAI,IAAI,MAAM,WAAW,CAAC;AAE1B,MAAI,QAAQ,QAAQ,CAAC,QAAQ,IAAI,MAAM,MAAM,MAAM,CAAC;AAEpD,MAAI,QAAQ,OAAO,CAAC,QAAQ,IAAI,MAAM,MAAM,KAAK,CAAC;AAElD,MAAI,QAAQ,QAAQ,CAAC,QAAQ,IAAI,MAAM,MAAM,WAAW,CAAC;AAEzD,MAAI,QAAQ,eAAe,CAAC,QAAQ,IAAI,MAAM,MAAM,aAAa,CAAC;AAElE,MAAI,QAAQ,cAAc,CAAC,QAAQ,IAAI,MAAM,MAAM,YAAY,CAAC;AAEhE,MAAI,QAAQ,SAAS,CAAC,QAAQ,IAAI,MAAM,MAAM,OAAO,CAAC;AAEtD,MAAI,QAAQ,cAAc,CAAC,QAAQ,IAAI,MAAM,MAAM,OAAO,CAAC;AAE3D,MAAI,QAAQ,UAAU,OAAO,QAAQ;AACnC,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF,CAAC;AAED,MAAI,OAAG,wBAAQ,SAAS,GAAG,OAAO,QAAQ,MAAM,IAAI,MAAM,WAAI,CAAC;AAE/D,MAAI,OAAG,wBAAQ,MAAM,GAAG,OAAO,QAAQ;AACrC,cAAM,qBAAK,GAAG;AAAA,EAChB,CAAC;AAED,QAAM,IAAI,OAAO;AACnB;AAEA,KAAK,EACF,KAAK,EACL,MAAM,CAAC,QAAQ;AACd,UAAQ,MAAM,GAAG;AACnB,CAAC;AAEH,QAAQ,KAAK,UAAU,MAAM;AAC3B,MAAI,KAAK,QAAQ;AACnB,CAAC;AAED,QAAQ,KAAK,WAAW,MAAM;AAC5B,MAAI,KAAK,SAAS;AACpB,CAAC;",
  "names": ["telegramToken"]
}
